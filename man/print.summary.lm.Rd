% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/print-utils.R
\name{print.summary.lm}
\alias{print.summary.glm}
\alias{print.summary.lm}
\title{Modificaton of print.summary.lm() to streamline output}
\usage{
\method{print}{summary.lm}(x, digits = max(3, getOption("digits") - 3),
  symbolic.cor = x$symbolic.cor,
  signif.stars = getOption("show.signif.stars"), show.call = FALSE,
  show.resids = FALSE, ...)

\method{print}{summary.glm}(x, digits = max(3, getOption("digits") - 3),
  symbolic.cor = x$symbolic.cor,
  signif.stars = getOption("show.signif.stars"), show.call = FALSE,
  show.resids = FALSE, ...)
}
\arguments{
\item{x}{An object of class \code{summary.lm} to be printed}

\item{digits}{A single numeric that indicates the number of digits to use}

\item{symbolic.cor}{A logical that if \code{=TRUE} will print the correlations in a symbolic form rather than as numbers}

\item{signif.stars}{A logical that if \code{=TRUE} then \sQuote{significance stars} will be printed for each coefficient}

\item{show.call}{A single logical that indicates whether the call should be re-printed}

\item{show.resids}{A single logical that indicates whether the information about the residuals should be included when printing the object}

\item{\dots}{Not implemented}
}
\value{
Invisibly returns the sent \code{x}.
}
\description{
Modifies the print.summary lm() function so that the output is less verbose.  For example, the call and information about the residuals will not be re-printed unless asked for.  In addition, several \sQuote{extra} blank lines were removed.
}
\examples{
## from lm examples
ctl <- c(4.17,5.58,5.18,6.11,4.50,4.61,5.17,4.53,5.33,5.14)
trt <- c(4.81,4.17,4.41,3.59,5.87,3.83,6.03,4.89,4.32,4.69)
group <- gl(2,10,20, labels=c("Ctl","Trt"))
weight <- c(ctl, trt)

# the new print version of the lm object (see print.lm)
lm.D9 <- lm(weight ~ group)
# the new print version of the summary.lm object
summary(lm.D9)

## from glm examples with new summary print
counts <- c(18,17,15,20,10,20,25,13,12)
outcome <- gl(3,1,9)
treatment <- gl(3,3)
d.AD <- data.frame(treatment, outcome, counts)
glm.D93 <- glm(counts ~ outcome + treatment, family=poisson())
summary(glm.D93)
}

